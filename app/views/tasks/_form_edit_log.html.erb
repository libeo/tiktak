<%
  duration_reg = "((\\\\d+)#{_('w')})? ?((\\\\d+)#{_('d')})? ?((\\\\d+)#{_('h')})? ?((\\\\d+)#{_('m')})?"
%>
<%= javascript_include_tag "dists/jquery.utils.lite" %>
<%= javascript_include_tag "datejs/date" %>
<%= javascript_include_tag "datejs/extras" %>
<script type='text/javascript'>
  function calendarOnSelect(calendar) {
      updateDuration();
      calendar.hide();
  }
</script>

<%= error_messages_for "log" %>

<%= f.label :started_at, _("Start") %>
 <%= f.datetime_select(:started_at, :default => @log.started_at - @log.started_at.sec, :ifFormat => "#{current_user.date_format} #{current_user.time_format}", :onClose => "calendarOnSelect") %>
<br />
<%= f.label :ended_at, _("End") %>
<%= f.datetime_select(:ended_at, :default => @log.ended_at - @log.ended_at.sec, :ifFormat => "#{current_user.date_format} #{current_user.time_format}", :onClose => "calendarOnSelect") %>
<br/>

<%= render(:partial => "/common/custom_attributes", :locals => { :object => @log }) %>

<% if @log.log_type != EventLog::TASK_COMMENT %>
  <%= f.label :customer_name, _("Client") %>
  <%= f.select :customer_id, work_log_customer_options(@log) %>

  <label for="work_log_duration"><%=_ 'Duration Worked' %></label>
  <%= f.text_field(:duration, :value => worked_nice(@log.duration/60), 
  :size => 10, :class => 'tooltip', :title => _('1w 2d 3h 4m')) %>
  <br/>
<% end %>

<label for="work_log_body"><%=_ 'Notes' %></label>
<%= f.text_area(:body, :rows => 10) %>
<br/>
<%= javascript_include_tag "durationUtils" %>
<script type='text/javascript'>
  var startField = jQuery("#work_log_started_at");
  var endField = jQuery("#work_log_ended_at");
  var durationField = jQuery('#work_log_duration');
  
  var durationFormat = <%= current_user.duration_format %>;
  var dateTimeFormat = Date.normalizeFormat("<%= "#{current_user.date_format} #{current_user.time_format}" %>");
  var minsPerDay = <%= current_user.workday_duration.to_i %>;
  var daysPerWeek = <%= current_user.days_per_week %>;
  var symbols = new Array();
  symbols['w'] = "<%= _('w') %>";
  symbols['d'] = "<%= _('d') %>";
  symbols['h'] = "<%= _('h') %>";
  symbols['m'] = "<%= _('m') %>";

  var converter = new DurationUtils(minsPerDay, daysPerWeek, durationFormat, dateTimeFormat, symbols);

  function updateDuration() {
    var duration = converter.calculateDuration(startField.val(), endField.val());
    durationField.val(converter.formatDuration(duration));
  }
  
  function updateEnd() {
    var duration = converter.convertText(durationField.val());
    var start = Date.parseExact(startField.val(), dateTimeFormat)
    endField.val(start.add({minutes : duration}).toString(dateTimeFormat));
  }

  startField.change( function() {
    if (Date.parseExact(startField.val(), dateTimeFormat) != null) {
      updateDuration();
    } else {
      alert("<%= _ "The date is not formatted properly. Please correct date format" %>");
    }
  });
  endField.change( function() {
    if (Date.parseExact(endField.val(), dateTimeFormat) != null) {
      updateDuration();
    } else {
      alert("<%= _ "The date is not formatted properly. Please correct date format" %>");
    }
  });
  durationField.change( function() {
    if (converter.isProperlyFormatted(durationField.val())) {
      updateEnd();
    } else {
      alert("<%= _ "The duration is not formatted properly. Please correct the duration" %>");
    }
  });
    
</script>
