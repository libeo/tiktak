<%= error_messages_for 'task' %>
<%

  perms = {}

  ['comment', 'edit', 'reassign', 'prioritize', 'close', 'milestone'].each do |p|
    if @task.project.nil? || session[:user].can?( @task.project, p )
      perms[p] = {}
    else
      perms[p] = { :disabled => 'disabled' }
    end
  end

%>

<!--[form:task]-->

<tr>
    <td valign="top">
      <fieldset id="task_information" style="padding-right:0.5em;"><legend><%=_ 'Information' %></legend>
        <label for="task_name"><%=_ 'Summary' %></label>
        <%= text_field 'task', 'name', { :size => 47, :style => "width:80%;"}.merge( perms['edit'] )  %><br />
        <label for="task_set_tags"><%=_ 'Tags' %></label>
        <%= text_field 'task', 'set_tags', { :size => 47, :value => @task.tags.collect{|t| t.name}.join(', '), :autocomplete => "off", :style => "width:80%;" }.merge( perms['edit'] ) %> <br />
        <div class="auto_complete" id="task_set_tags_auto_complete" style="display:none;"></div>
        <label for="task_description"><%=_ 'Description' %></label>
        <%= text_area 'task', 'description', { :rows => 20, :style => "width:80%;" }.merge( perms['edit'] )  %> <br />
        <label for="comment"><%=_ 'Comment' %></label>
        <%= text_area_tag 'comment', {}, { :rows => 10, :style => "width:80%;" }.merge( perms['comment'] )  %> <br />
        <label for="task_tmp_file"><%=_ 'Attach file' %></label>
        <%= file_field_tag 'task_file', { :size => 35, :class => "file" }.merge( perms['comment'] ) %> <br />
      </fieldset>
<% unless @tags.nil? %>
<script type="text/javascript">
new Autocompleter.Local('task_set_tags', 'task_set_tags_auto_complete', [<%= @tags.collect {|t| "'#{t[0].gsub(/'/, "\\\\\'")}'"}.join(', ') %>], {tokens:[','], minChars:0, frequency: 0, choices: 15});
</script>
<% end %>
    </td>
    <td valign="top" rowspan="2" style="width:22em;">
          <% if @task.project_id > 0
               selected_project = @task.project_id
             elsif session[:filter_project].to_i > 0
               selected_project = session[:filter_project].to_i
             else
               selected_project = User.find(session[:user].id).projects.find(:first, :order => 'name').id
             end

            %>
      <fieldset id="task_project_selection" style="padding-right:0;">
        <legend><%=_ 'Target' %></legend>
          <label for="task_project_id"><%=_ 'Project' %></label>
          <%= select 'task', 'project_id', @projects, {:selected => selected_project}, perms['reassign'] %><br/>

          <script type="text/javascript">
//<![CDATA[
new Form.Element.EventObserver('task_project_id', function(element, value) {new Ajax.Updater('task_milestone_id', '/tasks/get_milestones', {asynchronous:true, evalScripts:true, onComplete:function(request){Element.hide('loading');}, onLoading:function(request){Element.show('loading');}, parameters:'project_id=' + value, insertion: updateSelect })})
//]]>
</script>
          <script type="text/javascript">
//<![CDATA[
new Form.Element.EventObserver('task_project_id', function(element, value) {new Ajax.Updater('users[]', '/tasks/get_owners', {asynchronous:true, evalScripts:true, onSuccess:function(request){reset_owners()}, parameters:'project_id=' + value, insertion: updateSelect})})
//]]>
</script>

          <%#= observe_field 'task_project_id', { :url => { :controller => 'tasks', :action => 'get_milestones' }, :update => 'task_milestone_id', :with => 'project_id', :loading => "Element.show('loading');", :complete => "Element.hide('loading');", :insertion => "updateSelect" } %>
          <%#= observe_field 'task_project_id', { :url => { :controller => 'tasks', :action => 'get_owners' }, :update => 'users[]', :with => 'project_id', :success => 'reset_owners()', :insertion => "updateSelect" } %>
          <label for="task_milestone_id"><%=_ 'Milestone' %></label>
          <% unless @task.id.nil? %>
            <%= select 'task', 'milestone_id', [[_("[None]"), "0"]] + Milestone.find(:all, :order => 'name', :conditions => ['company_id = ? AND project_id = ? AND completed_at IS NULL', @session[:user].company.id, selected_project] ).collect {|c| [ c.name, c.id ] }, {}, perms['milestone'] %><br/>
          <% else %>
            <%= select'task', 'milestone_id', [[_("[None]"), "0"]] + Milestone.find(:all, :order => 'name', :conditions => ['company_id = ? AND project_id = ? AND completed_at IS NULL', @session[:user].company.id, selected_project] ).collect {|c| [ c.name, c.id ] }, {:selected => session[:filter_milestone] ? session[:filter_milestone].to_i : 0}, perms['milestone'] %><br/>
          <% end %>

<%

users = Project.find(selected_project).users.find(:all, :order => 'name' )

resource_string = select_tag 'users[]', "<option value=\"\">[#{_('No one')}]</option>" + users.collect{|us| "<option value=\"#{us.id}\">#{us.name}</option>"}.join(''), perms['reassign']
resource_string = resource_string.split(/\n/).join('').gsub(/'/, "\\\\\'")

owner_string = ''
num = 0
unless @task.users.empty?
  @task.users.each do |u|
    owner_string << "<div id=\"owner_#{num}\"><label for=\"dummy\">#{_('Assigned To')}</label>" if num == 0
    owner_string << "<div id=\"owner_#{num}\"><label for=\"dummy\"></label>" if num != 0
    owner_string <<  select_tag('users[]', "<option value=\"\">[#{_('No one')}]</option>" + users.collect{|us| "<option value=\"#{us.id}\" #{(u.id == us.id ? "selected=\"selected\"" : '')}>#{us.name}</option>"}.join('').gsub(/'/,"\\\\\'"), perms['reassign'])

    if( perms['reassign'].keys.size == 0 )
      owner_string << "<a href=\"#\" onclick=\"javascript:add_owner();return false;\"><img src=\"/images/user_add.png\" border=\"0\" style=\"padding:0;margin:0;\"/></a>" if num == 0
      owner_string << "<a href=\"#\" onclick=\"javascript:new Element.remove('owner_#{num}');return false;\"><img src=\"/images/user_delete.png\" border=\"0\" style=\"padding:0;margin:0;\"/></a>" if num != 0
    end
    owner_string << "</div>"
    num = num + 1
  end
  owner_string = owner_string.split(/\n/).join('')
else
  owner_string = select_tag 'users[]', "<option value=\"\">[#{_('No one')}]</option>" + users.collect{|us| "<option value=\"#{us.id}\" #{"selected" if (us.id == session[:user].id && @task.created_at.nil?) }>#{us.name}</option>"}.join(''), perms['reassign']
  owner_string = owner_string.split(/\n/).join('').gsub(/'/, "\\\\\'")

  if perms['reassign'].keys.size == 0
    owner_string = "<div id=\"owner_#{num}\"><label for=\"dummy\">#{_('Assigned To')}</label>#{owner_string}"
    owner_string << "<a href=\"#\" onclick=\"javascript:add_owner();return false;\"><img src=\"/images/user_add.png\" border=\"0\" style=\"padding:0;margin:0;\"/></a></div>"
  end
  num = num + 1
end



%>

<script type="text/javascript">
var num = <%=num%>;
var resource = '<%= resource_string %>'
function add_owner() {
        new Insertion.Before("owner_separator", '<div id="owner_' + num + '"><label for="dummy"></label>' + resource + '<a href="#" onclick="javascript:new Element.remove(\'owner_' + num + '\');return false;"><img src="/images/user_delete.png" border="0" style="padding:0;margin:0;"/></a></div>');
        num = num + 1;
}

function reset_owners() {
  for( var i = 1; i < num; i++ ) {
      if( $("owner_" + i) ) {
         new Element.remove("owner_" + i);
      }
    }
}

</script>

       <%= owner_string %>
      <div id="owner_separator"></div>
      <label for="task_requested_by"><%=_ 'Requested By' %></label>
      <%= text_field 'task', 'requested_by', {:size => 12}.merge(perms['edit']) %><br/>

        </fieldset>
      <fieldset id="task_attr" style="padding-right:0;">
        <legend><%=_ 'Attributes' %></legend>
      <label for="task_type_id"><%=_ 'Type' %></label>
        <%= select 'task', 'type_id', [[_('Task'),0],[_('New Feature'),1],[_('Defect'),2],[_('Improvement'),3]], {:selected => @task.type_id}, perms['prioritize']  %><br/>
        <label for="task_priority"><%=_ 'Priority' %></label>
        <%= select 'task', 'priority', [[_('Critical'),3],[_('Urgent'),2],[_('High'),1],[_('Normal'),0],[_('Low'),-1],[_('Lowest'),-2]], {:selected => @task.priority}, perms['prioritize']  %><br/>
      <label for="task_severity_id"><%=_ 'Severity' %></label>
        <%= select 'task', 'severity_id', [[_('Blocker'),3],[_('Critical'),2],[_('Major'),1],[_('Normal'),0],[_('Minor'),-1],[_('Trivial'),-2]], {:selected => @task.severity_id}, perms['prioritize']  %><br/>
      <% if @session[:user].option_tracktime == 1%>
       <label for="task_duration"><%=_ 'Time Estimate' %></label>
      <%= text_field 'task', 'duration', {:size => 12, :value => worked_nice(@task.duration), :class => 'tooltip', :title => '2w 3d 1h'}.merge(perms['prioritize']) %><br/>
      <label for="task_due_at"><%=_ 'Due Date' %></label>
        <% if perms['prioritize'].empty? %>
        <%= calendar_field 'task', 'due_at', { :class => 'date', :field_title => 'Due Date', :button_title => _('Show Calendar') },
        { :ifFormat => session[:user].date_format, :firstDay => 1, :range => [2006, 2010], :step => 1, :showOthers => true }
        %><br/>
        <% else %>
        <%= text_field 'task', 'due_at', {:size => 12}.merge(perms['prioritize']) %><br/>
        <% end %>

<% else %>
    <%= hidden_field_tag "task[duration]", "1h" %>
    <%= hidden_field_tag "task[due_at]", "" %>
<% end %>
      </fieldset>
      <fieldset id="task_notify" style="padding-right:0;">
        <legend><%=_ 'Notification' %></legend>

        <% watchers = @task.watchers.collect {|t| t.id } %>
        <label for="task[notification_ids][]" class="tooltip" title="<%=_ "Additional people to be notified on task changes<br />in addition to creator and asignee.<br/><br/>Ctrl-click to toggle." %>"><%=_ 'Notify Users' %></label>
        <%= select_tag "watchers[]", User.find(:all, :conditions => ["company_id = ?", session[:user].company_id], :order => "name").collect {|u| "<option value=#{u.id} #{(watchers.include?(u.id) ? 'selected=\"selected\"' : '')} >#{u.name}</option>"}.join(''), {:multiple => true, :size => 8, :class => 'tooltip', :title => 'Additional people to be notified on task changes<br />in addition to creator and asignee.<br/><br/>Ctrl-click to toggle.'}.merge(perms['edit']) %><br/>
        <label for="task[notify_emails]" class="tooltip" title="Comma-separated list of emails to notify">Cc:</label>
        <%= text_area 'task', 'notify_emails', { :cols => 15, :rows => 3, :class => 'tooltip', :title => 'Comma-separated list of emails to notify'}.merge(perms['edit']) %><br/>
      </fieldset>

      <% if @task.attachments.size > 0 %>
      <fieldset id="task_attachments">
        <legend>Attachments</legend>

        <% for file in @task.attachments %>
        <%= link_to h(file.name), {:controller => 'project_files', :action => 'download', :id => file.id} %> (<%=human_size(file.file_size)%>)
        <%= link_to _('[Delete]'), {:controller => 'project_files', :action => 'destroy', :id => file.id}, :confirm => _("Really delete %s?", file.name) %>
        <br/>
        <% end %>
      </fieldset>
      <% end %>
    </td>
</tr>



<!--[eoform:task]-->
