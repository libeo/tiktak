== Installing CIT on your server
=== Step 1: Getting the source

The source is released under the MIT/X Consortium License.

The easiest way to get the source and easily update it from time to time is with git. You'll need to install that on your machine and then run:

  git clone git://github.com/ari/clockingit.git


=== Step 2: Prerequsites

You need to be running some type of Unix: OSX, Linux, Solaris, BSD. Windows will probably not work.

Install the following packages. Under FreeBSD this can be easily done using 'portinstall' and then each of these ports:

* ruby18-gems
* ruby18-mysql
* rubygem-rake
* ImageMagick

Under other operating systems use your favourite package manager to ensure you have Ruby 1.8.x, rubygems, Imagemagick, Rake and the Ruby mysql driver installed.

Then install Phusion Passenger from http://www.modrails.com/install.html You can also run CIT with Mongrel, but it tends to be a little easier with Phusion to set up. Make sure you set up the appropriate virtual host in Apache.

=== Step 3: Ruby gems

There are a bunch of gems which are needed for running CIT. If you cd into the top of your clockingIT installation, then type:

  rake gems

That will tell you what you need to install.

=== Step 4: Setup

  ruby setup.rb

== Upgrading to a newer revision

  git checkout db/schema.rb
  git pull

Next, make sure the database is updated and javascript/css rebuilt.

  rake db:migrate RAILS_ENV=production
  rake asset:packager:build_all

Depending on which environment you are updating, you can change the RAIL_ENV value to “test” or “development” and the appropriate database will be updated.

Find the daemons running with

  ps ax | grep ruby

then kill each of the three running daemons.

Restart daemons

  cd /usr/local/www/clockingit
  nohup ./script/push_server &
  ./script/ferret_server -e production start
  apachectl restart

== Setting up Email Integration

You need to setup your email solution so that it sends all emails for a subdomain to your rails user, and setup the alias so that it runs the mailman script.

Assuming that you already have your DNS and MX set correctly, we'll configure sendmail to pass all emails sent to domain.com to ClockingIT so that replies can go back to the task. See http://www.freebsd.org/doc/en/books/handbook/sendmail.html for more help on configuring sendmail on FreeBSD systems.

* Add an entry to /etc/mail/local-host-names to contain your domain

  domain.com

* Add an entry to /etc/mail/aliases to create an alias that will hand off emails to the mailman script

  cit: "|/path/to/cit/script/runner -e production 'Mailman.receive(STDIN.read)'"

* Add an entry to /etc/mail/virtusertable to redirect all emails to your domain to the above alias

  @domain.com        cit

* run “make” in /etc/mail

* run “make restart” in /etc/mail